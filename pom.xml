<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.example.test</groupId>
  <artifactId>testJEE</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <packaging>war</packaging>
  
  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <surefire.version>2.19.1</surefire.version>
    <browser>phantomjs</browser> <!-- PhantomJS will be our default browser-->
  </properties>
  
    <build>
        <defaultGoal>test</defaultGoal>
	    <finalName>${project.artifactId}</finalName>
	    
	    <plugins>
	        <plugin>
	            <groupId>org.apache.maven.plugins</groupId>
	            <artifactId>maven-war-plugin</artifactId>
	            <version>2.6</version>
	            <configuration>
	                <failOnMissingWebXml>false</failOnMissingWebXml>
	            </configuration>
	        </plugin>
            <!-- The compiler plugin enforces Java 1.6 compatibility and controls execution of annotation processors -->
            <plugin>
		        <artifactId>maven-compiler-plugin</artifactId>
		        <version>3.5.1</version>
		        <configuration>
			        <source>1.7</source>
			        <target>1.7</target>
		        </configuration>
	        </plugin>     
	        <plugin>
			    <groupId>org.eluder.coveralls</groupId>
			    <artifactId>coveralls-maven-plugin</artifactId>
			    <version>4.2.0</version>
			    <configuration>
			        <branch>master</branch>
			    </configuration>
			</plugin>       
            <plugin>
              <groupId>org.jacoco</groupId>
              <artifactId>jacoco-maven-plugin</artifactId>
              <version>0.7.7.201606060606</version>
              <executions>
                      <!--
                          Prepares the property pointing to the JaCoCo runtime agent which
                          is passed as VM argument when Maven the Surefire plugin is executed.
                      -->
                      <execution>
                          <id>pre-unit-test</id>
                          <goals>
                              <goal>prepare-agent</goal>
                          </goals>
                          <configuration>
                          	<includes>
		                 		<include>com.example.*</include> <!-- instrument only project classes -->
		                 	</includes>
                            <!--
                                Sets the name of the property containing the settings
                                for JaCoCo runtime agent.
                            -->
                            <propertyName>surefireArgLine</propertyName>
                          </configuration>
                      </execution>
                      <!--
                          Ensures that the code coverage report for unit tests is created after
                          unit tests have been run.
                      -->
                      <execution>
                          <id>post-unit-test</id>
                          <phase>test</phase>
                          <goals>
                              <goal>report</goal>
                          </goals>
                          <configuration>
                          </configuration>
                      </execution>
              </executions>
          </plugin>
          <!-- The surefire plugin is configured to pass a system property to GlassFish to retarget the derby log file -->
          <plugin>
              <artifactId>maven-surefire-plugin</artifactId>
              <version>2.19.1</version>
              <configuration>
                  <!-- Sets the VM argument line used when unit tests are run. -->
                  <argLine>${surefireArgLine}</argLine>
                  <!-- Skips unit tests if the value of skip.unit.tests property is true -->
                  <skipTests>${skip.unit.tests}</skipTests>
                  <includes>
	            		<include>${surefire.include.regex}</include>
	              </includes>
                  <systemPropertyVariables>
                      <java.util.logging.config.file>
                          ${project.build.testOutputDirectory}/logging.properties
                      </java.util.logging.config.file>
                      <derby.stream.error.file>
                          ${project.build.directory}/derby.log
                      </derby.stream.error.file>
                  </systemPropertyVariables>
              </configuration>
          </plugin>
            
        </plugins>
    </build>
    
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.jboss.arquillian</groupId>
                <artifactId>arquillian-bom</artifactId>
                <version>1.1.11.Final</version>
                <scope>import</scope>
                <type>pom</type>
            </dependency>
        </dependencies>
    </dependencyManagement>
    
    <dependencies>
    	<dependency>
		    <groupId>javax</groupId>
		    <artifactId>javaee-api</artifactId>
		    <version>7.0</version>
		    <scope>provided</scope>
		</dependency>
        <dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpclient</artifactId>
			<version>4.5.2</version>
			<scope>test</scope>
		</dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.12</version>
            <scope>test</scope>
        </dependency>
        <dependency>
		    <groupId>org.mockito</groupId>
		    <artifactId>mockito-all</artifactId>
		    <version>1.10.19</version>
		    <scope>test</scope>
		</dependency>
		<dependency>
            <groupId>info.cukes</groupId>
            <artifactId>cucumber-java</artifactId>
            <version>1.2.4</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>info.cukes</groupId>
            <artifactId>cucumber-junit</artifactId>
            <version>1.2.4</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.arquillian.junit</groupId>
            <artifactId>arquillian-junit-container</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.arquillian.container</groupId>
            <artifactId>arquillian-glassfish-embedded-3.1</artifactId>
            <version>1.0.0.CR3</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.glassfish.main.extras</groupId>
            <artifactId>glassfish-embedded-all</artifactId>
            <version>3.1.2</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
		  <groupId>org.apache.httpcomponents</groupId>
		  <artifactId>fluent-hc</artifactId>
		  <version>4.5.2</version>
		  <scope>test</scope>
		</dependency>
    </dependencies>
    
	<!-- test profile definitions -->
	<profiles>
        <profile>
            <id>non-regression-tests</id>
            <activation>
				<activeByDefault>true</activeByDefault>
			</activation>
            <properties>
				<surefire.include.regex>**/unit/**/*.java,**/integration/**/*.java</surefire.include.regex>
			</properties>
            <build>
                <testResources>
                    <testResource>
                        <directory>src/test/resources</directory>
                    </testResource>
                    <testResource>
                        <directory>src/test/resources-glassfish-embedded</directory>
                    </testResource>
                </testResources>
            </build>
        </profile>
		<profile>
			<id>unit-tests</id>
			<properties>
				<surefire.include.regex>**/unit/**/*.java</surefire.include.regex>
			</properties>
		</profile>
		
        <profile>
            <id>integration-tests</id>
            <properties>
				<surefire.include.regex>**/integration/**/*.java</surefire.include.regex>
			</properties>
            <dependencies>
                <!-- Enable dependency if you want to use H2 -->
                <!-- Also update glassfish-resources.xml to use H2 connection information -->
                <!--
                <dependency>
                    <groupId>com.h2database</groupId>
                    <artifactId>h2</artifactId>
                    <version>1.3.166</version>
                    <scope>test</scope>
                </dependency>
                -->
            </dependencies>
            <build>
                <testResources>
                    <testResource>
                        <directory>src/test/resources</directory>
                    </testResource>
                    <testResource>
                        <directory>src/test/resources-glassfish-embedded</directory>
                    </testResource>
                </testResources>
            </build>
        </profile>
        
       	<profile>
			<id>functional-tests</id>
			<properties>
				<surefire.include.regex>**/functional/**/*.java</surefire.include.regex>
			</properties>			
			<build>
			    <!-- test resource filtering evaluates ${browser} expression in arquillian.xml -->
			    <testResources>
			        <testResource>
			            <directory>src/test/resources</directory>
			            <filtering>true</filtering>
			        </testResource>
			    </testResources>
			</build>
		</profile>
    </profiles>	
</project>
